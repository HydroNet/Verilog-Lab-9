<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\lab9.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\lab9.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Mon Apr 25 21:29:31 2022
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[9]">delay10uss</a>
 <LI><a href="#[e]">LCD_pinss</a>
 <LI><a href="#[8]">LCD_cmds</a>
 <LI><a href="#[a]">LCD_chars</a>
 <LI><a href="#[b]">LCD_inits</a>
 <LI><a href="#[c]">LCD_strings</a>
 <LI><a href="#[d]">LCD_clear</a>
 <LI><a href="#[7]">user_code</a>
 <LI><a href="#[2]">SWIHandler</a>
 <LI><a href="#[3]">PAbtHandler</a>
 <LI><a href="#[4]">DAbtHandler</a>
 <LI><a href="#[5]">IRQHandler</a>
 <LI><a href="#[6]">FIQHandler</a>
 <LI><a href="#[1]">UndefHandler</a>
 <LI><a href="#[0]">Reset_Handler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2]">SWIHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">SWIHandler</a><BR>
 <LI><a href="#[3]">PAbtHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">PAbtHandler</a><BR>
 <LI><a href="#[4]">DAbtHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">DAbtHandler</a><BR>
 <LI><a href="#[5]">IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">IRQHandler</a><BR>
 <LI><a href="#[6]">FIQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">FIQHandler</a><BR>
 <LI><a href="#[1]">UndefHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">UndefHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4]">DAbtHandler</a> from mystartup.o(RESET) referenced from mystartup.o(RESET)
 <LI><a href="#[6]">FIQHandler</a> from mystartup.o(RESET) referenced from mystartup.o(RESET)
 <LI><a href="#[5]">IRQHandler</a> from mystartup.o(RESET) referenced from mystartup.o(RESET)
 <LI><a href="#[3]">PAbtHandler</a> from mystartup.o(RESET) referenced from mystartup.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from mystartup.o(RESET) referenced from mystartup.o(RESET)
 <LI><a href="#[2]">SWIHandler</a> from mystartup.o(RESET) referenced from mystartup.o(RESET)
 <LI><a href="#[1]">UndefHandler</a> from mystartup.o(RESET) referenced from mystartup.o(RESET)
 <LI><a href="#[7]">user_code</a> from mydips.o(mycode) referenced from mystartup.o(RESET)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[9]"></a>delay10uss</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lcd_subbs.o(lcd_subss))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_strings
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_inits
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_chars
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_cmds
</UL>

<P><STRONG><a name="[e]"></a>LCD_pinss</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lcd_subbs.o(lcd_subss))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_code
</UL>

<P><STRONG><a name="[8]"></a>LCD_cmds</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lcd_subbs.o(lcd_subss))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay10uss
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_code
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_strings
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_inits
</UL>

<P><STRONG><a name="[a]"></a>LCD_chars</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lcd_subbs.o(lcd_subss))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay10uss
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_strings
</UL>

<P><STRONG><a name="[b]"></a>LCD_inits</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lcd_subbs.o(lcd_subss))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_cmds
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay10uss
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_code
</UL>

<P><STRONG><a name="[c]"></a>LCD_strings</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lcd_subbs.o(lcd_subss))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_chars
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_cmds
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay10uss
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_code
</UL>

<P><STRONG><a name="[d]"></a>LCD_clear</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lcd_subbs.o(lcd_subss))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_cmds
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_code
</UL>

<P><STRONG><a name="[7]"></a>user_code</STRONG> (ARM, 0 bytes, Stack size unknown bytes, mydips.o(mycode))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_strings
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_inits
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_cmds
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_pinss
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mystartup.o(RESET)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[2]"></a>SWIHandler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, mystartup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWIHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWIHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mystartup.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>PAbtHandler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, mystartup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbtHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbtHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mystartup.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>DAbtHandler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, mystartup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbtHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbtHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mystartup.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>IRQHandler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, mystartup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mystartup.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>FIQHandler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, mystartup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mystartup.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>UndefHandler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, mystartup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UndefHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UndefHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mystartup.o(RESET)
</UL>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, mystartup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_code
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mystartup.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
